/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tweetme;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.math.BigInteger;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.brunocvcunha.instagram4j.requests.InstagramUploadPhotoRequest;
import org.brunocvcunha.instagram4j.requests.InstagramUploadVideoRequest;


/**
 ** @author Jose Linares
 */
public class SocialUI extends javax.swing.JFrame implements KeyListener{

    /**
     * Creates new form SocialUI
     */
    public SocialUI() throws IOException {
        initComponents();
        this.setLocationRelativeTo(null);
        jTextPane1.addKeyListener(this);
        jTextPane2.addKeyListener(this);
        mainTextLabel.setText("Characters: 0");
        this.hashTagLabel.setText("Hash Tags: 0");
        this.feedLabel.setText("<html><br/>");

     
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jFrame1 = new javax.swing.JFrame();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        filePathField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        mainTextLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextPane2 = new javax.swing.JTextPane();
        jLabel5 = new javax.swing.JLabel();
        hashTagLabel = new javax.swing.JLabel();
        feedLabel = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jFrame1.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        jFrame1.setTitle("Social Publisher");
        jFrame1.setAlwaysOnTop(true);

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Social UI");

        jScrollPane1.setViewportView(jTextPane1);

        filePathField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filePathFieldActionPerformed(evt);
            }
        });

        jButton1.setText("Publish");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("File Image...");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel2.setText("Image File");

        mainTextLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        jScrollPane2.setViewportView(jTextPane2);

        jLabel5.setText("Hashtags (Facebook and Instagram - separate with commas)");

        hashTagLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);

        feedLabel.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        feedLabel.setBorder(javax.swing.BorderFactory.createTitledBorder("Status"));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(feedLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(hashTagLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3))
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(mainTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(filePathField, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38)
                        .addComponent(jButton2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 216, Short.MAX_VALUE)
                        .addComponent(jButton1)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(mainTextLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(hashTagLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filePathField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(feedLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        jLabel1.setText("Text to Publish");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(12, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(55, 55, 55)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        FileNameExtensionFilter filter = new FileNameExtensionFilter( "Image files","jpg", "jpeg","png", "mp4");
        File selectedFile = null;

        JFileChooser fileChooser = new JFileChooser();
        fileChooser.setFileFilter(filter);
        BufferedImage bufferedImage, newBufferedImage = null;
        fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
        int result = fileChooser.showOpenDialog(this.jFrame1);

        if (result == JFileChooser.APPROVE_OPTION)
        {
            // user selects a file
            selectedFile = fileChooser.getSelectedFile();
            this.filePathField.setText(selectedFile.getAbsolutePath());
        }
        
        //Do conversion from png to jpg
        if(selectedFile.getAbsolutePath().contains(".png")){
            System.out.println("Converting png to jpg");
         
            try {
                bufferedImage = ImageIO.read(new File(selectedFile.getAbsolutePath()));
                System.out.println("Fetching absolute path: "+selectedFile.getAbsolutePath());
                this.updateFeedlabel("Reading png file...");
                newBufferedImage = new BufferedImage(bufferedImage.getWidth(),
			bufferedImage.getHeight(), BufferedImage.TYPE_INT_RGB);
	  newBufferedImage.createGraphics().drawImage(bufferedImage, 0, 0, Color.WHITE, null);
                
            } catch (IOException ex) {
                Logger.getLogger(SocialUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            try {
                String newFilePath = selectedFile.getParent()+"\\"+"temp.jpg";
                
                ImageIO.write(newBufferedImage, "jpg", new File(newFilePath));
                this.updateFeedlabel("Converting png file to jpg...");
                System.out.println("Writing to: "+newFilePath);
                this.filePathField.setText((newFilePath));
                this.updateFeedlabel("Converted png file to jpg completed...");
            } catch (IOException ex) {
                Logger.getLogger(SocialUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed
    private void updateFeedlabel(String msg)
    {
        feedLabel.setText(feedLabel.getText() + new java.util.Date() + ": " + msg + "<br/>");
    }
    
  
    private boolean checkHTTPResponse()
    {
        if(Instagram.instagram.getLastResponse().toString().contains("HTTP/1.1 200 OK"))
        {
            return true;
        }
            return false; 
    }    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       
        // Check if there is text, photo or video and handle accordingly
        

        if(this.filePathField.getText().length() <= 0){
            updateFeedlabel("Sending tweet...");
            MSTwitter.tweet.setStatus(this.jTextPane1.getText());
            updateFeedlabel("Sent tweet...");
        }
        else{
            File f = new File(this.filePathField.getText());
            updateFeedlabel("Sending tweet with image...");
            MSTwitter.tweet.updateStatusWithMedia(this.jTextPane1.getText(), BigInteger.ZERO, f);
            updateFeedlabel("Sent to twitter...");
            try {
                if(this.filePathField.getText().contains("jpg") ||
                        this.filePathField.getText().contains("jpeg"))
                {
                    updateFeedlabel("Sending Instagram post with image...");
                    Instagram.instagram.sendRequest(new InstagramUploadPhotoRequest(
                    f, this.jTextPane1.getText() +" "+ this.jTextPane2.getText())); 
                   
                    if(checkHTTPResponse()){
                        updateFeedlabel("Post sent to Instagram OK...");
                    }
                    else{
                        updateFeedlabel("Post sent to Instagram Failed...");
                        new Log(Instagram.instagram.getLastResponse().toString());
                    }
                }
                else
                {
                    if(this.filePathField.getText().contains("mp4")){
                        updateFeedlabel("Sending Instagram post with video...");
                        Instagram.instagram.sendRequest(new InstagramUploadVideoRequest(
                        f, this.jTextPane1.getText() +" "+ this.jTextPane2.getText()));
                        updateFeedlabel("Sent to Instagram...");
                        if(checkHTTPResponse()){
                            updateFeedlabel("Post sent to Instagram OK...");
                        }
                        else{
                            updateFeedlabel("Post sent to Instagram Failed...");
                            new Log(Instagram.instagram.getLastResponse().toString());
                        }
                    }
                }
                
                
        } catch (IOException ex) {
            Logger.getLogger(SocialUI.class.getName()).log(Level.SEVERE, null, ex);
            new Log(ex.getMessage());
        }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void filePathFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filePathFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_filePathFieldActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SocialUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SocialUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SocialUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SocialUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                try {
                    new SocialUI().setVisible(true);
                } catch (IOException ex) {
                    ex.printStackTrace();//Logger.getLogger(SocialUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
        });

    }
    @Override
    public void keyTyped(KeyEvent e) {
    }

    public void keyReleased(KeyEvent e) {  
        String mainText = jTextPane1.getText();  

        String words[]= jTextPane2.getText().split("\\s");  
        
        mainTextLabel.setText(" Characters: " + mainText.length());
        if(jTextPane2.getText().length() > 0)
        {
            System.out.println("adding hash");
            hashTagLabel.setText("Hash Tags: " + words.length);
        }
    }  

    @Override
    public void keyPressed(KeyEvent e) {
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel feedLabel;
    private javax.swing.JTextField filePathField;
    private javax.swing.JLabel hashTagLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JTextPane jTextPane2;
    private javax.swing.JLabel mainTextLabel;
    // End of variables declaration//GEN-END:variables






}
